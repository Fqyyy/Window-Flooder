import ctypes
import threading
import random
import pyautogui
import time

MESSAGES = [
    "–¢—ã –ø–æ–ø–∞–ª—Å—è! üòà",
    "–≠—Ç–æ –Ω–µ –±–∞–≥, —ç—Ç–æ —Ñ–∏—á–∞! üêõ",
    "–°–∏—Å—Ç–µ–º–∞ –≤–∑–ª–æ–º–∞–Ω–∞! üíª",
    "–¢–≤–æ–π –∫–æ–º–ø—å—é—Ç–µ—Ä —Ç–µ–ø–µ—Ä—å –º–æ–π! üëæ",
    "–ü–æ–ø—Ä–æ–±—É–π –≤—ã–∫–ª—é—á–∏—Ç—å –º–µ–Ω—è! üòè",
    "–¢—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—à—å —ç—Ç–æ! üöÄ",
    "–ó–∞—á–µ–º —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª? ü§î",
    "–≠—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ... üå™Ô∏è",
    "–û–∫–Ω–∞, –æ–∫–Ω–∞, –æ–∫–Ω–∞! ü™ü",
    "–¢—ã –≤ –ª–æ–≤—É—à–∫–µ! üï∏Ô∏è",
]

TITLES = [
    "–í–Ω–∏–º–∞–Ω–∏–µ!",
    "–û—à–∏–±–∫–∞!",
    "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!",
    "–°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
    "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞",
    "–í–∑–ª–æ–º —Å–∏—Å—Ç–µ–º—ã",
    "–°—Ä–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
    "–¢—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–∫—Ä–æ–µ—à—å —ç—Ç–æ!",
    "–û–∫–Ω–æ-—É–±–∏–π—Ü–∞!",
    "–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –æ–∫–Ω–∞!",
]

ICON_TYPES = [0x10, 0x40, 0x30]

screen_width, screen_height = pyautogui.size()

stop_event = threading.Event()

DELAY_BETWEEN_WINDOWS = 0.1

MAX_THREADS = 20

active_threads = 0
thread_lock = threading.Lock()

def open_popup():
    global active_threads
    try:
        message = random.choice(MESSAGES)
        title = random.choice(TITLES)
        icon = random.choice(ICON_TYPES)
        
        x = random.randint(0, screen_width - 400)
        y = random.randint(0, screen_height - 300)
        
        width = random.randint(300, 800)
        height = random.randint(200, 600)
        
        hwnd = ctypes.windll.user32.MessageBoxW(0, message, title, icon)
        ctypes.windll.user32.SetWindowPos(hwnd, 0, x, y, width, height, 0x0001)
    finally:
        with thread_lock:
            active_threads -= 1

def start_popup_flood():
    global active_threads
    while not stop_event.is_set():
        with thread_lock:
            if active_threads < MAX_THREADS:
                popup_thread = threading.Thread(target=open_popup)
                popup_thread.daemon = True
                popup_thread.start()
                active_threads += 1
        
        time.sleep(DELAY_BETWEEN_WINDOWS)

def main():
    popup_flood_thread = threading.Thread(target=start_popup_flood)
    popup_flood_thread.daemon = True
    popup_flood_thread.start()

    while True:
        pass

if __name__ == '__main__':
    main()